#include<reg51.h>
#include<uart.h>
#include<lcddisplay.h>
#include<string.h>
sbit chr = P0^0;
sbit load1 = P0^1;
sbit fan = P0^2;
sbit tv = P0^3;
unsigned char mybyte,i,rcv,rcv1,rcv2,rcv3,rcv4,rcv5,i; 
unsigned char str[5],flag1=0,flag2=0,flag3=0,flag4=0;
void main()
{
P0=0x00;
 delay(50);
UART_init();
lcd_init(); 
lcdcmd(0x01);
msgdisplay("VOICE CNTRL HOME");
lcdcmd(0xc0);
msgdisplay(" AUTOMATION ");
delay(300);
start: 
while(1)
 {
do{
rcv=receive();
}while(rcv != 't'); 
i=0;
str[i]=receive();
if(strcmp(str,"TV on") == 0)
{
 tv=1;
 delay(150);

lcdcmd(0x01);
msgdisplay(" TV ON");
 delay(100);
 goto start;
}

if(strcmp(str,"TV of") == 0)
 {
 tv=0;
lcdcmd(0x01);
msgdisplay("TV OFF");
 delay(100);
 goto start; 
 }
if(strcmp(str,"light") == 0) 
 {
 load1=~load1;
 delay(100);
 if(load1==1)
 {
lcdcmd(0x01);
msgdisplay("LIGHT ON");
 delay(100);
 }
 else
 {
lcdcmd(0x01);
msgdisplay("LIGHT OFF");
 delay(100); 
 }
 goto start;
 } 
if(strcmp(str,"charg") == 0)
 {
chr=~chr;
 delay(100);

 if(chr==1)
 {
lcdcmd(0x01);
msgdisplay("CHARGER ON");
 delay(100);
 }
 else
 {
lcdcmd(0x01);
msgdisplay("CHARGER OFF");
 delay(100); 
 }
 goto start;
 }
if(strcmp(str,"fan o") == 0)
 {
fan=~fan;
 delay(150);
 if(fan==1)
 {
lcdcmd(0x01);
msgdisplay("COOLING FAN ON");
 delay(100);
 }
 else
 {
lcdcmd(0x01);
msgdisplay("COOLING FAN OFF");
 delay(100); 
 }
 go to start;
 } 
 }
}
#define lcd_data P2
sbit lcd_rs = P2^0; // Here we are using LCD in four bit mode that's why LCD's Data pins and control 
sbit lcd_en = P2^1;
 void lcd_init(void); 
 void lcdcmd(unsigned char value);
 void lcddata(unsigned char value);
 void lcd_i2c(unsigned char value);
 void msgdisplay(unsigned char b[]);
 void delay(unsigned int value); 
void convert(unsigned int temp1_value);
void lcd_init(void)
{
 lcdcmd(0x02); 
 lcdcmd(0x02);
 lcdcmd(0x28); //intialise the lcd in 4 bit mode*/
 lcdcmd(0x28); //intialise the lcd in 4 bit mode*/
  lcdcmd(0x0e); //cursor blinking
 lcdcmd(0x06); //move the cursor to right side
 lcdcmd(0x01); //clear the lcd 
}
void lcdcmd(unsigned char value) // LCD COMMAND
 {
  lcd_data=value&(0xf0); //send msb 4 bits
 lcd_rs=0; //select command register
 lcd_en=1; //enable the lcd to execute command
 delay(3);
 lcd_en=0; 
 lcd_data=((value<<4)&(0xf0)); //send lsb 4 bits
 lcd_rs=0; //select command register
 lcd_en=1; //enable the lcd to execute command
 delay(3);
 lcd_en=0; 
  }  
void lcddata(unsigned char value)
 { 
 lcd_data=value&(0xf0); //send msb 4 bits
 lcd_rs=1; //select data register
 lcd_en=1; //enable the lcd to execute data
 delay(3);
 lcd_en=0; 
 lcd_data=((value<<4)&(0xf0)); //send lsb 4 bits
 lcd_rs=1; //select data register
 lcd_en=1; //enable the lcd to execute data
 delay(3);
 lcd_en=0; 
 
 delay(3); 
 } 
void msgdisplay(unsigned char b[]) // send string to lcd
 {
unsigned char s,count=0;
for(s=0;b[s]!='\0';s++)
 {
 count++; 
 if(s==16)
 lcdcmd(0xc0);
 if(s==32)
 {
 lcdcmd(1);
 count=0;
 }
 lcddata(b[s]);
 }
} 
void delay(unsigned int value)
 {
 unsigned int x,y;
 for(x=0;x<value;x++)
 for(y=0;y<500;y++);
 } 
void convert(unsigned int temp1_value)
 {
 unsigned int d1,d2,d3;
 d3=temp1_value%10;
 temp1_value=temp1_value/10;
 d2=temp1_value%10;
 d1=temp1_value/10;
 //lcddata(d1/10+48);
 lcddata(d1+48);
 lcddata(d2+48);
 lcddata(d3+48);
 } 
